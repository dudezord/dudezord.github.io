


{
  "pages": [
    {
      
      
      
      "content": "\n",
      "url": "/404.html"
    },{
      
      "title": "Config",
      "description": "This chapter covers the many configuration options of Hydejack, allowing you to tailor it to your needs.\n",
      "content": "Once Jekyll is running, you can start with basic configuration by adding various entries to _config.yml. \nBesides the documentation here, you can also read the annotated config file.\n\nWhen making changes to _config.yml, it is necessary to restart the Jekyll process for changes to take effect.\n\n\n  Setting url and baseurl    \n      GitHub Pages\n    \n  \n  Changing accent colors and sidebar images    \n      Theme color\n    \n  \n  Changing fonts    \n      Removing Google Fonts\n    \n  \n  Choosing a blog layout    \n      Using the blog layout in a subdirectory\n    \n  \n  Adding an author    \n      Adding an author’s picture\n      Adding social media icons\n      Adding an email, RSS icon or download icon\n    \n  \n  Enabling comments\n  Enabling Google Analytics    \n      Using a custom analytics provider\n    \n  \n  Changing built-in strings\n  Adding legal documents\n  Enabling math blocks\n  Adding custom Favicons and App Icons    \n      Changing the Favicon\n      Changing the App Icons\n    \n  \n  Adding a cookies banner*\n  Enabling newsletter boxes*\n  Enabling Dark Mode*\n\n\nSetting url and baseurl\nThe first order of business should be to set the correct url and baseurl values in _config.yml.\n\nThe url is the domain of your site, including the protocol (http or https). For this site, it is\n\n# file: `_config.yml`\nurl: https://qwtel.com\n\n\nYou don’t need to provide this property when hosting on GitHub Pages or Netlify.\n\nIf your entire Jekyll blog is hosted in a subdirectory of your page, provide the path in baseurl with a leading /, but no trailing /,\ne.g.\n\n# file: `_config.yml`\nbaseurl: /hydejack\n\n\nOtherwise, provide the empty string ''\n\nYou don’t need to provide this property when hosting on GitHub Pages or Netlify.\n\nGitHub Pages\nWhen hosting on GitHub Pages the url is https://&lt;username&gt;.github.io\n(unless you are using a custom domain).\n\nThe baseurl depends on the kind of page you are hosting.\n\n\n  When hosting a user or organization page, use the empty string ''.\n  When hosting project page, use /&lt;reponame&gt;.\n\n\nFor for information on the types of pages you can host on GitHub, see the\nGitHub Help article.\n\nChanging accent colors and sidebar images\nHydejack allows you to choose the background image of the sidebar, as well as the accent color\n(color of the links, selection and focus outline, etc…).\n\n# file: `_config.yml`\naccent_image: /assets/img/sidebar-bg.jpg\naccent_color: rgb(79,177,186)\n\n\nI recommend using a blurred image in order for the text to remain readable.\nIf you save a blurred image as JPG, it will also drastically reduce its file size.\n\nThe accent_image property also accepts the special value none which will remove the default image.\n\nIf your sidebar image contains bright colors, the white text can be difficult to read. In this case, consider setting\ninvert_sidebar: true in the front matter to invert the text colors in the sidebar. \nUse front matter defaults to enable this on all pages (see below).\n\nNote that these values can be overwritten on a per-page basis, i.e. you can create a unique look for each page.\nYou can also apply a certain look to all posts in a category via front matter defaults, e.g.:\n\n# file: `_config.yml`\ndefaults:\n  - scope:\n      path:         hydejack/\n    values:\n      accent_image: /assets/img/hydejack-bg.jpg\n      accent_color: rgb(38,139,210)\n\n\nTheme color\nHydejack also supports the theme_color property. When set, it will change the background color of the sidebar, as well as set the theme_color property in the Web App Manifest. In some browsers, such as Chrome on Android, this will change the color of the browser’s UI components.\n\n# file: `_config.yml`\ntheme_color:  rgb(25,55,71)\n\n\nJust like accent_* properties, the theme color can be overridden on a per-page basis by setting it in the front matter.\n\nChanging fonts\nHydejack lets you configure the font of regular text and headlines, and it has built-in support for Google Fonts.\nThere are three keys in _config.yml associated with this: font, font_heading and google_fonts.\nThe defaults are:\n\n# file: `_config.yml`\nfont:         Noto Sans, Helvetica, Arial, sans-serif\nfont_heading: Roboto Slab, Helvetica, Arial, sans-serif\ngoogle_fonts: Roboto+Slab:700|Noto+Sans:400,400i,700,700i\n\n\nfont and font_heading must be valid CSS font-family values. When using Google Fonts make sure to provide at least one fallback.\n\nThe google_fonts key is the string necessary to fetch the fonts from Google.\nYou can get it from the download page at Google Fonts after you’ve selected one or more fonts:\n\n\n\nRemoving Google Fonts\nIf you prefer not to use Google Fonts and remove all associated code from the site,\nset the google_fonts key to false.\n\nThe no_google_fonts parameter has been removed in v9 and no longer has any effect.\n\nChoosing a blog layout\nHydejack features three layouts for showing your blog posts.\n\n\n  The list layout only shows the title and groups the posts by year of publication.\n  The grid layout* is exclusive to the PRO Version and will show a content card (with image) for each post.\n  The blog layout is a traditional paginated layout and shows the title and an excerpt of each post.\n\n\nIn order to use the list or grid layout add the following front-matter to a new markdown file:\n\n---\nlayout: list # or `grid`\ntitle:  Home\n---\n\n\nIf you want to use the blog layout, you need to add jekyll-paginate to your Gemfile and to the plugins list in your config file:\n\n# file: `Gemfile`\ngem \"jekyll-paginate\"\n\n\n# file: `_config.yml`\nplugins:\n  - jekyll-paginate\n\n\nYou also need to add the paginate and paginate_path keys to your config file, e.g.\n\n# file: `_config.yml`\npaginate:      10\npaginate_path: '/:num/'\n\n\nThe blog layout needs to be applied to a file with the .html file extension\nand the paginate_path needs to match the path to the index.html file.\nTo match the paginate_path above, put a index.html with the following front matter in the root directory:\n\n# file: `index.html`\n---\nlayout: blog\ntitle: Blog\n---\n\n\nFor more information see Pagination.\n\nUsing the blog layout in a subdirectory\nIf you want to use the blog layout at a URL like /my-blog/, create the following folder structure:\n\n├── my-blog\n│   └── index.html\n└── _config.yml\n\n\nYou can use the same index.html as before and place it in the subdirectory.\n\n# file: `my-blog/index.html`\n---\nlayout: blog\ntitle: Blog\n---\n\n\nIn your config file, make sure the paginate_path matches the name of the subdirectory:\n\n# file: `_config.yml`\npaginate:      10\npaginate_path: /my-blog/:num/ #!!\n\n\nTo add an entry in the sidebar to your blog directory, see Adding an entry to the sidebar.\n\nAdding an author\nAt a bare minimum, you should add an author key with a name and email sub-key\n(used by the feed plugin) to to your config file:\n\n# file: `_config.yml`\nauthor:\n  name:  Florian Klampfer\n  email: mail@qwtel.com\n\n\nIf you would like the author to be displayed in the about section below a post or project*, add an about key and provide markdown content. I recommend using the YAML pipe | syntax, so you can include multiple paragraphs:\n\n# file: `_config.yml`\nauthor:\n  name:  Florian Klampfer\n  email: mail@qwtel.com\n  about: |\n    Hi, I'm Florian or @qwtel...\n\n    This is another paragraph.\n\n\nAdding an author’s picture\nIf you’d like for the author’s picture to appear in addition the about text (see above), you can either use the jekyll-avatar plugin or provide URLs to images manually.\n\nTo use the plugin, add it to your Gemfile and the list of plugins in your config file:\n\n# file: `Gemfile`\ngem \"jekyll-avatar\"\n\n\n# file: `_config.yml`\nplugins:\n  - jekyll-avatar\n\n\nRun bundle install for the changes to take effect.\n\nMake sure you have provided a GitHub username in your config file (github_username),\nor to the author key (author.social.github, author.github.username, or author.github).\nSee Adding social media icons for more.\n\nTo set an image manually, you have to provide an URL to the author’s picture key:\n\n# file: `_config.yml`\nauthor:\n  picture:  /assets/img/me.jpg\n\n\nIf you’d like to provide multiple versions for screens with different pixel densities,\nyou can provide path and srcset keys instead:\n\n# file: `_config.yml`\nauthor:\n  picture:\n    path:   /assets/img/me.jpg\n    srcset:\n      1x:   /assets/img/me.jpg\n      2x:   /assets/img/me@2x.jpg\n\n\nThe keys of the srcset hash will be used as image descriptors. For more information on srcset, see the documentation at MDN, or this article from CSS-Tricks.\n\nAdding social media icons\nHydejack supports a variety of social media icons out of the box. These are defined on a per-author basis, so make sure you’ve followed the steps in Adding an author.\n\nIf you are using the gem-based version of Hydejack, download social.yml and put it into _data in the root directory. This is necessary because gem-based themes do not support including _data.\n\nYou can add a link to a social network by adding an entry to the social key in to an author.\nIt consists of the name of the social network as key and your username within that network as value, e.g.\n\n# file: `_config.yml`\nauthor:\n  social:\n    twitter: qwtel\n    github:  qwtel\n\n\nCheck out authors.yml to see which networks are available.\nYou can also follow the steps here to add your own social media icons.\n\nYou can change the order in which the icons appear by moving lines up or down, e.g.\n\n# file: `_config.yml`\nauthor:\n  social:\n    github:  qwtel # now github appears first\n    twitter: qwtel\n\n\nTo get an overview of which networks are available and how a typical username in that network looks like,\nsee the included authors.yml.\n\nShould providing a username not produce a correct link for some reason, you can provide a complete URL instead, e.g.\n\n# file: `_config.yml`\nauthor:\n  social:\n    youtube: https://www.youtube.com/channel/UCu0PYX_kVANdmgIZ4bw6_kA\n\n\nYou can add any platform, even if it’s not defined in social.yml, by providing a complete URL. However, a fallback icon  will be used when no icon is available. Supplying your own icons is an advanced topic.\n\nAdding an email, RSS icon or download icon\nIf you’d like to add an email , RSS , or download  icon to the list, add the email, rss, or download key, e.g.:\n\n# file: `_config.yml`\nauthor:\n  social:\n    email:    mail@qwtel.com\n    rss:      /feed.xml # make sure you provide an absolute URL\n    download: https://github.com/hydecorp/hydejack/archive/v9.1.6.zip\n\n\nEnabling comments\nHydejack supports comments via Disqus. Before you can add comments to a page you need to register and add your site to Disqus’ admin console. Once you have obtained your “Disqus shortname”, you include it in your config file:\n\n# file: `_config.yml`\ndisqus: &lt;disqus shortname&gt;\n\n\nNow comments can be enabled by adding comments: true to the front matter.\n\n---\nlayout:   post\ntitle:    Hello World\ncomments: true\n---\n\n\nYou can enable comments for entire classes of pages by using front matter defaults.\nE.g. to enable comments on all posts, add to your config file:\n\n# file: `_config.yml`\ndefaults:\n  - scope:\n      type: posts\n    values:\n      comments: true\n\n\nEnabling Google Analytics\nEnabling Google Analytics is as simple as setting the google_analytics key.\n\n# file: `_config.yml`\ngoogle_analytics: UA-XXXXXXXX-X\n\n\nTo remove Google Analytics and all associated code from the site, set the google_analytics key to false.\n\nUsing a custom analytics provider\nIf you want to use a different analytics provider such as Matomo, you can add its code snippet to _includes/my-body.html (create if it doesn’t exist).\nThe default file contains an example.\n\nChanging built-in strings\nYou can change the wording of built-in strings like “Related Posts” or “Read more” in _data/strings.yml.\n\nIf you are using the gem-based version the file doesn’t exist, but you can get the default file here.\n\nYou will frequently find markers like &lt;!--post_title--&gt;.\nYou can place them freely within your string and they will be replaced with the content they refer to.\n\nYou may also use this feature to translate the theme into different languages.\nIn this case you should also set the lang key to your config file, e.g.\n\n# file: `_config.yml`\nlang: cc-ll\n\n\nwhere cc is the 2-letter country code and ll specifies a 2-letter location code, e.g.: de-at.\n\nYou may also change the strings used for formatting dates and times (look out for the date_formats key), but be aware that the values you provide need to be valid Ruby format directives.\n\nAdding legal documents\nIf you have pages for contact data, privacy policy, cookie policy, etc. you can add links to them in the footer by listing them under the legal key in your config file as follows:\n\n# file: `_config.yml`\nlegal:\n  - title: Impress\n    url:  /impress/\n  - title: Cookies Policy\n    url:  /cookies-policy/\n\n\nWhen using Hydejack’s offline feature, the pages listed here will be downloaded and cached when loading the page for the first time.\n\nEnabling math blocks\n\nHydejack supports math blocks with either KaTeX or MathJax.\n\nThe MathJax implementation comes with a client-side runtime and works on GitHub Pages. \nIt is the more heavy-weight of the two and doesn’t work without JavaScript enabled. \nDue to the size of the complete MathJax package, it only works partially with offline support enabled.\n\nThe KaTeX implementation pre-renders the KaTeX output during site building.\nIt’s more lightweight because it does not ship a client-side runtime and therefore works without JavaScript.\nIn my opinion, it is the more elegant solution, but it requires a JavaScript runtime on the machine that builds the site,\ni.e. it does not work on GitHub Pages.\n\nYou can switch between the two implementations by changing the kramdown.math_engine key to either katex or mathjax in your config file.\n\n# file: `_config.yml`\nkramdown:\n  math_engine:         katex\n  math_engine_opts:    {}\n\n\nThe KaTeX implementation also requires the kramdown-math-katex gem in your Gemfile. \nIf you intend to use MathJax instead, this step is not required.\n\n# file: `Gemfile`\ngem \"kramdown-math-katex\"\n\n\nThere are a couple of things to know about this gem:\n\n  It is not supported on GitHub Pages. \nYou have to build the site on your machine before uploading to GitHub,\nor use a more permissive cloud building tool such as Netlify.\n  You need some kind of JavaScript runtime on your machine.\nUsually installing NodeJS will suffice. \nAlternatively, adding gem \"duktape\" will also do.\nFor more, see https://github.com/kramdown/math-katex#documentation\n\n\nBefore you add math content, remember to run bundle install and restart Jekyll.\n\nAdding custom Favicons and App Icons\nChanging the Favicon\nBy default, Hydejack will use the Favicon from /assets/icons/favicon.ico and Apple Touch Icon from /assets/icons/icon-192x192.png.\nYou can either override these files, or override the path in the config file via favicon and app_touch_icon keys:\n\n# file: \"_config.yml\"\nfavicon: /favicon.ico\napple_touch_icon: /assets/img/logo.png\n\n\nChanging the App Icons\nBy default, Hydejack includes its own favicon, as well as app icons in 8 different resolutions.\n\n\n  \n    \n      Name\n      Resolution\n    \n  \n  \n    \n      icon-512x512.png\n      512x512\n    \n    \n      icon-384x384.png\n      384x384\n    \n    \n      icon-192x192.png\n      192x192\n    \n    \n      icon-152x152.png\n      152x152\n    \n    \n      icon-144x144.png\n      144x144\n    \n    \n      icon-128x128.png\n      128x128\n    \n    \n      icon-96x96.png\n      96x96\n    \n    \n      icon-72x72.png\n      72x72\n    \n  \n\n\nTo change the default icons you have to replce all of them. To make this manageable, I recommend using the following tools:\n\nFirst, use the Maskable.app Editor to confine your logo/picture to the “minimum safe area”. More on maskable app icons, see this article on web.dev. \nMake sure the base image is at least 512x512 pixels in size.\n\nThen use the Web App Manifest Generator to automatically resize the icons. \nUpload the icon downloaded from Maskable.app and then click “Generate .zip”. \nIn the zip, ignore the manifest.json and look for the icons folder. Copy it into the assets folder of your site.\n\nTo change the favicon, place your own favicon.ico (32x32, PNG) into assets/icons.\n\nAdding a cookies banner*\n\n# file: `_config.yml`\nhydejack:\n  cookies_banner: true\n\n\nEnabling this setting will show a notice at the top of the page to new visitors.\nYou can change the wording of the notice in _data/strings.yml\nwith the cookies_banner.text and cookies_banner.okay keys:\n\n# file: `_data/strings.yml`\ncookies_banner:\n  text: This site uses cookies. [Markdown allowed](/cookies-policy/)!\n  okay: Okay\n\n\nEnabling newsletter boxes*\nTo enable showing newsletter subscription boxes below each post and project,\nprovide your Tinyletter username to the tinyletter key in the config file.\n\n# file: `_config.yml`\ntinyletter:  &lt;tinyletter username&gt;\n\n\nTo edit the content of the newsletter box, open _data/strings.yml, and change the entries under the tinyletter key.\n\nIf want to use a different mailing provider you can build your own form, and insert it into _includes/my-newsletter.html. The file includes an example form for MailChimp, where you need to fill in site.mailchimp.action and site.mailchimp.hidden_input (you can get these from MailChimp).\n\nTo build a completely new from, you can use the same CSS classes as Bootstrap. Note that only form, grid and utility classes are available. Check out Forms by Example for more examples.\n\nEnabling Dark Mode*\nBuyers of the PRO version have access to a dark-themed version of Hydejack.\n\nDark mode can be enabled in config.yml under the hydejack key and has three settings and two adjustments:\n\n# file: `_config.yml`\nhydejack:\n  dark_mode:\n    dynamic: true\n    sunrise: 6\n    sunset:  18\n    icon:    true\n    always:  false\n\n\nSetting dynamic, will enable dark mode based on the client’s local time (unlike location-based sunset calculations, this approach does not require a permission form the user). You can adjust sunrise and sunset to change when to show the light/dark theme.\n\nSetting icon will show a switch to alternate between the light and dark mode at the top of the page.\n\nFinally, setting always will cause dark mode to become the default theme at all times (combine with dynamic: false).\n\nContinue with Basics\n\n",
      "url": "/docs/config/"
    },{
      
      "title": "Blog",
      
      "content": "\n",
      "url": "/blog/"
    },{
      
      "title": "About me",
      
      "content": "\n",
      "url": "/about/"
    },{
      
      "title": "Home",
      
      "content": "Welcome to my personal corner on the Internet.\n\nI’m dudezord and I will be your host.\n\nThis website was born as a challenge to myself to rediscover the wonderful world of Game Development.\nJoin me on this endeavour!\n\n",
      "url": "/"
    },{
      
      "title": "Install",
      "description": "How you install Hydejack depends on whether you start a new site, or change the theme of an existing site.\n",
      "content": "How you install Hydejack depends on whether you start a new site, \nor change the theme of an existing site.\n\n\n  New sites\n  Existing sites    \n      Troubleshooting\n    \n  \n  GitHub Pages\n  Running locally\n\n\nNew sites\nFor new sites, the best way to get started with Hydejack is via the Starter Kit. \nIt comes with a documented config file and example content that gets you started quickly.\n\nIf you have a GitHub account, fork the Hydejack Starter Kit repository. \nOtherwise download the Starter Kit and unzip them somewhere on your machine.\n\nIf you bought the PRO Version of Hydejack, use the contents of the starter-kit folder instead.\n\nIn addition to the docs here, you can follow the quick start guide in the Starter Kit.\n\nYou can now jump to running locally.\n\nYou can now also  directly.\n\nExisting sites\nIf you have an existing site that you’d like to upgrade to Hydejack you can install the theme via bundler.\nAdd the following to your Gemfile:\n\n# file: `Gemfile`\ngem \"jekyll-theme-hydejack\"\n\n\nIf you bought the PRO Version of Hydejack, copy the #jekyll-theme-hydejack folder into the root folder of your site,\nand add the following to your Gemfile instead:\n\n# file: `Gemfile`\ngem \"jekyll-theme-hydejack\", path: \"./#jekyll-theme-hydejack\"\n\n\nThe folder is prefixed with a # to indicate that this folder is different from regular Jekyll content. \nThe # char was choosen specifically because it is on of the four characters ignored by Jekyll by default (., _ , #, ~).\n\nIn your config file, change the theme to Hydejack:\n\n# file: `_config.yml`\ntheme: jekyll-theme-hydejack\n\n\nHydejack comes with a default configuration file that takes care most of the configuration,\nbut it pays off to check out the example config file in the Starter Kit to see what’s available.\n\nYou can now jump to running locally.\n\nTroubleshooting\nIf your existing site combines theme files with your content (as did previous verisons of Hydejack/PRO),\nmake sure to delete the following folders:\n\n\n  _layouts\n  _includes\n  _sass\n  assets\n\n\nThe assets folder most likely includes theme files as well as your personal/content files. \nMake sure to only delete files that belong to the old theme!\n\nGitHub Pages\nIf you want to build your site on GitHub Pages, check out the gh-pages branch in the Hydejack Starter Kit repo.\n\nFor existing sites, you can instead set the remote_theme key as follows:\n\n# file: `_config.yml`\nremote_theme: hydecorp/hydejack@v9.1.6\n\n\nMake sure the plugins list contains jekyll-include-cache (create if it doesn’t exist):\n\n# file: `_config.yml`\nplugins:\n  - jekyll-include-cache\n\n\nTo run this configuration locally, make sure the following is part of your Gemfile:\n\n# file: `Gemfile`\ngem \"github-pages\", group: :jekyll_plugins\ngem \"jekyll-include-cache\", group: :jekyll_plugins\n\n\nNote that Hydejack has a reduced feature set when built on GitHub Pages. \nSpecifically, using KaTeX math formulas doesn’t work when built in this way.\n\nRunning locally\nMake sure you’ve cded into the directory where _config.yml is located.\nBefore running for the first time, dependencies need to be fetched from RubyGems:\n\n$ bundle install\n\n\nIf you are missing the bundle command, you can install Bundler by running gem install bundler.\n\nNow you can run Jekyll on your local machine:\n\n$ bundle exec jekyll serve\n\n\nand point your browser to http://localhost:4000 to see Hydejack in action.\n\nContinue with Config\n\n",
      "url": "/docs/install/"
    },{
      
      "title": "Projects",
      
      "content": "\n",
      "url": "/projects/"
    },{
      
      "title": "Upgrade",
      "description": "This chapter shows how to upgrade Hydejack to a newer version. The method depends on how you’ve installed Hydejack.\n",
      "content": "This chapter shows how to upgrade Hydejack to a newer version. The method depends on how you’ve installed Hydejack.\n\n\n  Free version\n  PRO Version\n  GitHub Pages\n\n\nBefore upgrading to v7+, make sure you’ve read the CHANGELOG,\nespecially the part about the license change!\n\nFree version\nUpgrading the free version of the theme is as easy as running\n\nbundle update jekyll-theme-hydejack\n\n\nPRO Version\n\nIn v9, the structure of Hydejack PRO sites has changed. If you’re looking to upgrade from v8 or earlier, \ncheck out Installation for existing sites instead.\n\nBuyers of the PRO version will find the files necessary for an upgrade in the #jekyll-theme-hydejack folder of the downloaded zip archive.\nTo upgrade, simply overwrite the existing theme folder in the root directory of your site with the new one, then run\n\nbundle update jekyll-theme-hydejack\n\n\nIf you’ve modified any of Hydejack’s files in #jekyll-theme-hydejack, your changes will most likely be overwritten\nand you have to apply them again. Make sure you’ve made a backup before overwriting any files.\n\nGitHub Pages\nWhen building on GitHub Pages, upgrading Hydejack is as simple as setting the remote_theme key in _config.yml to the desired version.\n\nremote_theme: hydecorp/hydejack@v9.1.6\n\n\nTo use the latest version on the v9 branch on each build, you can use  hydecorp/hydejack@v9.\n\nContinue with Config\n",
      "url": "/docs/upgrade/"
    },{
      
      "title": "Writing",
      "description": "Hydejack offers a few additional features to markup your content. Don’t worry, these are merely CSS classes added with kramdown’s {:...} syntax, so that your content remains compatible with other Jekyll themes.\n",
      "content": "Hydejack offers a few additional features to markup your content.\nDon’t worry, these are merely CSS classes added with kramdown’s {:...} syntax,\nso that your content remains compatible with other Jekyll themes.\n\n\n  A word on building speeds\n  Adding a table of contents\n  Adding notes\n  Adding large text\n  Adding large images\n  Adding image captions\n  Adding large quotes\n  Adding faded text\n  Adding tables    \n      Scroll table\n      Small tables\n    \n  \n  Adding code blocks\n  Adding math    \n      Inline\n      Block\n    \n  \n\n\nFor an introduction to markdown in general, see Mastering Markdown and kramdown Syntax.\n\nA word on building speeds\nIf building speeds are a problem, try using the --incremental flag, e.g.\n\nbundle exec jekyll serve --incremental\n\n\nFrom the Jekyll docs (emphasis mine):\n\n\n  Enable the experimental incremental build feature. Incremental build only re-builds posts and pages that have changed, resulting in significant performance improvements for large sites, but may also break site generation in certain cases.\n\n\nThe breakage occurs when you create new files or change filenames.\nAlso, changing the title, category, tags, etc. of a page or post will not be reflected in pages\nother then the page or post itself.\nThis makes it ideal for writing new posts and previewing changes, but not setting up new content.\n\nAdding a table of contents\nYou can add a generated table of contents to any page by adding {:toc} below a list.\n\nMarkdown:\n* this unordered seed list will be replaced by the toc\n{:toc}\n\n\nYou can also create your table of contents as an ordered list (note the 1. instead of *):\n\n1. this ordered seed list will be replaced by the toc\n{:toc}\n\n\nThe width of the display has to be larger than 1665px for the ToC to become sticky.\nOtherwise, the ToC will appear where the seed list is placed in the document.\nTo show the table of contents only on large displays (&gt; 1665px) use the following:\n\n* this unordered seed list will be replaced by the toc \n{:toc .large-only}\n\n\nA sticky table of contents will reduce the amount of space freed up by the no_break_layout: false setting.\nThis is necessary to ensure large code blocks or tables don’t overlap with the ToC.\n\nAdding notes\nYou can add a note by adding the note class to a paragraph.\n\nExample:\n\nYou can add a note.\n\nMarkdown:\nYou can add a note.\n{:.note}\n\n\nEdit the note key in _data/strings.yml to change the wording of the default label.\nTo add a note with a specific label, add a title attribute:\n\nA custom label.\n{:.note title=\"Attention\"}\n\n\nA custom label.\n\nAdding large text\nYou can add large text by adding the lead class to the paragraph.\n\nExample:\n\nYou can add large text.\n\nMarkdown:\nYou can add large text.\n{:.lead}\n\n\nAdding large images\nYou can make an image span the full width by adding the lead class.\n\nExample:\n\n\n\nMarkdown:\n![Full-width image](https://via.placeholder.com/800x100){:.lead width=\"800\" height=\"100\" loading=\"lazy\"}\n\n\nIt is recommended to provide the dimension of the image via the width and height attributes, \nso that browsers can calculate the layout before the images are loaded. Combining this with the loading=\"lazy\" attribute\nallows modern browsers to load the images just-in-time as the users scrolls.\n\nPrevious versions of Hydejack shipped with a custom JavaScript-based lazy loading solution,\nbut it has been removed in v9 in favor of this more standards-based approach.\n\nAdding image captions\nYou can add captions to large images by adding the figcaption class to the paragraph after the image:\n\n\n\nAn optional caption for an image.\n\nMarkdown:\n![Full-width image](https://via.placeholder.com/800x100){:.lead width=\"800\" height=\"100\" loading=\"lazy\"}\n\nA caption for an image.\n{:.figcaption}\n\n\nAdding large quotes\nYou can make a quote “pop out” by adding the lead class.\n\nExample:\n\n\n  You can make a quote “pop out”.\n\n\nMarkdown:\n&gt; You can make a quote \"pop out\".\n{:.lead}\n\n\nAdding faded text\nYou can gray out text by adding the faded class. Use this sparingly and for information that is not essential, as it is more difficult to read.\n\nExample:\n\nI’m faded, faded, faded.\n\nMarkdown:\nI'm faded, faded, faded.\n{:.faded}\n\n\nAdding tables\nAdding tables is straightforward and works just as described in the kramdown docs, e.g.\n\n\n  \n    \n      Default aligned\n      Left aligned\n      Center aligned\n      Right aligned\n    \n  \n  \n    \n      First body part\n      Second cell\n      Third cell\n      fourth cell\n    \n  \n\n\nMarkdown:\n| Default aligned |Left aligned| Center aligned  | Right aligned  |\n|-----------------|:-----------|:---------------:|---------------:|\n| First body part |Second cell | Third cell      | fourth cell    |\n\n\nHowever, it gets tricker when adding large tables.\nIn this case, Hydejack will break the layout and grant the table the entire available screen width to the right:\n\n\n  \n    \n      Default aligned\n      Left aligned\n      Center aligned\n      Right aligned\n      Default aligned\n      Left aligned\n      Center aligned\n      Right aligned\n      Default aligned\n      Left aligned\n      Center aligned\n      Right aligned\n      Default aligned\n      Left aligned\n      Center aligned\n      Right aligned\n    \n  \n  \n    \n      First body part\n      Second cell\n      Third cell\n      fourth cell\n      First body part\n      Second cell\n      Third cell\n      fourth cell\n      First body part\n      Second cell\n      Third cell\n      fourth cell\n      First body part\n      Second cell\n      Third cell\n      fourth cell\n    \n    \n      Second line\n      foo\n      strong\n      baz\n      Second line\n      foo\n      strong\n      baz\n      Second line\n      foo\n      strong\n      baz\n      Second line\n      foo\n      strong\n      baz\n    \n    \n      Third line\n      quux\n      baz\n      bar\n      Third line\n      quux\n      baz\n      bar\n      Third line\n      quux\n      baz\n      bar\n      Third line\n      quux\n      baz\n      bar\n    \n    \n      Second body\n       \n       \n       \n      Second body\n       \n       \n       \n      Second body\n       \n       \n       \n      Second body\n       \n       \n       \n    \n    \n      2 line\n       \n       \n       \n      2 line\n       \n       \n       \n      2 line\n       \n       \n       \n      2 line\n       \n       \n       \n    \n  \n  \n    \n      Footer row\n       \n       \n       \n      Footer row\n       \n       \n       \n      Footer row\n       \n       \n       \n      Footer row\n       \n       \n       \n    \n  \n\n\nTables adopts to the font size! You can decrease the size of the table by adding the smaller CSS class. Put {:.smaller} below the Markdown table, or add class=\"smaller\" to a HTML table.\n\nScroll table\nIf the extra space still isn’t enough, the table will receive a scrollbar.\nIt is browser default behavior to break the lines inside table cells to fit the content on the screen.\nBy adding the scroll-table class on a table, the behavior is changed to never break lines inside cells, e.g:\n\n\n  \n    \n      Default aligned\n      Left aligned\n      Center aligned\n      Right aligned\n      Default aligned\n      Left aligned\n      Center aligned\n      Right aligned\n      Default aligned\n      Left aligned\n      Center aligned\n      Right aligned\n      Default aligned\n      Left aligned\n      Center aligned\n      Right aligned\n    \n  \n  \n    \n      First body part\n      Second cell\n      Third cell\n      fourth cell\n      First body part\n      Second cell\n      Third cell\n      fourth cell\n      First body part\n      Second cell\n      Third cell\n      fourth cell\n      First body part\n      Second cell\n      Third cell\n      fourth cell\n    \n    \n      Second line\n      foo\n      strong\n      baz\n      Second line\n      foo\n      strong\n      baz\n      Second line\n      foo\n      strong\n      baz\n      Second line\n      foo\n      strong\n      baz\n    \n    \n      Third line\n      quux\n      baz\n      bar\n      Third line\n      quux\n      baz\n      bar\n      Third line\n      quux\n      baz\n      bar\n      Third line\n      quux\n      baz\n      bar\n    \n    \n      Second body\n       \n       \n       \n      Second body\n       \n       \n       \n      Second body\n       \n       \n       \n      Second body\n       \n       \n       \n    \n    \n      2 line\n       \n       \n       \n      2 line\n       \n       \n       \n      2 line\n       \n       \n       \n      2 line\n       \n       \n       \n    \n  \n  \n    \n      Footer row\n       \n       \n       \n      Footer row\n       \n       \n       \n      Footer row\n       \n       \n       \n      Footer row\n       \n       \n       \n    \n  \n\n\nYou can add the scroll-table class to a markdown table by putting {:.scroll-table} in line directly below the table.\nTo add the class to a HTML table, add the it to the class attribute of the table tag, e.g. &lt;table class=\"scroll-table\"&gt;.\n\nSmall tables\nIf a table is small enough to fit the screen even on small screens, you can add the stretch-table class\nto force a table to use the entire available content width. Note that stretched tables can no longer be scrolled.\n\n\n  \n    \n      Default aligned\n      Left aligned\n      Center aligned\n      Right aligned\n    \n  \n  \n    \n      First body part\n      Second cell\n      Third cell\n      fourth cell\n    \n  \n\n\nAn optional caption for a table\n\nYou can add the stretch-table class to a markdown table by putting {:.stretch-table} in line directly below the table.\nTo add the class to a HTML table, add the it to the class attribute of the table tag, e.g. &lt;table class=\"stretch-table\"&gt;.\n\nJust like images, you can add captions to tables by adding the figcaption class to the paragraph after the table.\n\nAn optional caption for a table\n{:.figcaption}\n\n\nAdding code blocks\nTo add a code block without syntax highlighting, simply indent 4 spaces (regular markdown).\nFor code blocks with code highlighting, use ~~~&lt;language&gt;. This syntax is also supported by GitHub.\nFor more information and a list of supported languages, see Rouge.\n\nYou can give each code block a filename, by making the first line in the block a comment of the form File: \"dir/filename.ext\". Use either single quotes ', double quotes \", or backticks ` to surround the filename.\n\nExample:\n\n// file: \"code-block.js\"\n// Example can be run directly in your JavaScript console\n\n// Create a function that takes two arguments and returns the sum of those\n// arguments\nvar adder = new Function(\"a\", \"b\", \"return a + b\");\n\n// Call the function\nadder(2, 6);\n// &gt; 8\n\n\nAn optional caption for a code block\n\nMarkdown:\n\n~~~js\n// file: \"code-block.js\"\n// Example can be run directly in your JavaScript console\n\n// Create a function that takes two arguments and returns the sum of those\n// arguments\nvar adder = new Function(\"a\", \"b\", \"return a + b\");\n\n// Call the function\nadder(2, 6);\n// &gt; 8\n~~~\n\nAn optional caption for a code block\n{:.figcaption}\n\n\nDO NOT use Jekyll’s { % highlight % } ... { % endhighlight % } syntax, especially together with the linenos option.\nThe generated table to render the line numbers does not have a CSS class or any other way of differentiating it from regular tables,\nso that the styles above apply, resulting in a broken page.\nWhat’s more, the output from highlight tags isn’t even valid HTML, nesting pre tags inside pre tags,\nwhich will in break the site during minification.\nYou can read more about it here and\nhere.\n\nAdding math\nBefore adding math blocks, make sure you’ve set up math support.\n\nInline\nExample:\n\nLorem ipsum f(x)=x2f(x) = x^2f(x)=x2.\n\nMarkdown:\nLorem ipsum $$ f(x) = x^2 $$.\n\n\nBlock\nExample:\n\nϕ(x,y)=ϕ(∑i=1nxiei,∑j=1nyjej)=∑i=1n∑j=1nxiyjϕ(ei,ej)=(x1,…,xn)(ϕ(e1,e1)⋯ϕ(e1,en)⋮⋱⋮ϕ(en,e1)⋯ϕ(en,en))(y1⋮yn)\\begin{aligned}\n  \\phi(x,y) &amp;= \\phi \\left(\\sum_{i=1}^n x_ie_i, \\sum_{j=1}^n y_je_j \\right) \\\\[2em]\n            &amp;= \\sum_{i=1}^n \\sum_{j=1}^n x_i y_j \\phi(e_i, e_j)            \\\\[2em]\n            &amp;= (x_1, \\ldots, x_n)\n               \\left(\\begin{array}{ccc}\n                 \\phi(e_1, e_1)  &amp; \\cdots &amp; \\phi(e_1, e_n) \\\\\n                 \\vdots          &amp; \\ddots &amp; \\vdots         \\\\\n                 \\phi(e_n, e_1)  &amp; \\cdots &amp; \\phi(e_n, e_n)\n               \\end{array}\\right)\n               \\left(\\begin{array}{c}\n                 y_1    \\\\\n                 \\vdots \\\\\n                 y_n\n               \\end{array}\\right)\n\\end{aligned}ϕ(x,y)​=ϕ(i=1∑n​xi​ei​,j=1∑n​yj​ej​)=i=1∑n​j=1∑n​xi​yj​ϕ(ei​,ej​)=(x1​,…,xn​)⎝⎛​ϕ(e1​,e1​)⋮ϕ(en​,e1​)​⋯⋱⋯​ϕ(e1​,en​)⋮ϕ(en​,en​)​⎠⎞​⎝⎛​y1​⋮yn​​⎠⎞​​\n\nAn optional caption for a math block\n\nMarkdown:\n\n$$\n\\begin{aligned} %!!15\n  \\phi(x,y) &amp;= \\phi \\left(\\sum_{i=1}^n x_ie_i, \\sum_{j=1}^n y_je_j \\right) \\\\[2em]\n            &amp;= \\sum_{i=1}^n \\sum_{j=1}^n x_i y_j \\phi(e_i, e_j)            \\\\[2em]\n            &amp;= (x_1, \\ldots, x_n)\n               \\left(\\begin{array}{ccc}\n                 \\phi(e_1, e_1)  &amp; \\cdots &amp; \\phi(e_1, e_n) \\\\\n                 \\vdots          &amp; \\ddots &amp; \\vdots         \\\\\n                 \\phi(e_n, e_1)  &amp; \\cdots &amp; \\phi(e_n, e_n)\n               \\end{array}\\right)\n               \\left(\\begin{array}{c}\n                 y_1    \\\\\n                 \\vdots \\\\\n                 y_n\n               \\end{array}\\right)\n\\end{aligned}\n$$\n\nAn optional caption for a math block\n{:.figcaption}\n\n\nKaTeX does not support the align and align* environments.\nInstead, aligned should be used, e.g. \\begin{aligned} ... \\end{aligned}.\n\nContinue with Scripts\n\n",
      "url": "/docs/writing/"
    }
  ], 
  "documents": [
    {
      "image": {"path":"/assets/img/blog/posts/press-start.jpg"},
      "title": "A new beginning",
      "date": "2022-03-01 00:00:00 +0000",
      
      "content": "\n  Hello everyone!\n\n\nHello everyone!\n\nMy real name is Pedro and I was born in the beautiful and sunny 🇵🇹 Portugal.\n\nSince I was a young child that I had the desire to one day become a Game Developer.\n\nAt 18 years of age, I started to pursue my dream and enrolled in a Computer Science degree.\n\nAt 26 years of age, I finished my MSc in Graphics Programming and Game Development.\n\nI was ready. The World was ready. The time had come. Right? Right…?!?!\n\n5 years have already passed and the answer is: WRONG!\n\nI was never able to work on games professionally.\n\nAnd because of that I also never had the motivation to work on them on my free time.\n\nThe time has finally come… The journey starts now!\n",
      "categories": [],
      "tags": [],
      
      "collection": "posts",
      "url": "/blog/2022-03-01-a-new-beginning/"
    },{
      "image": {"path":"/assets/img/blog/posts/solo-developers.png"},
      "title": "The plan is simple",
      "date": "2022-03-02 00:00:00 +0000",
      
      "content": "If you haven’t read my initial blog post, please check it first!\n\n\n  The plan is simple\n  Or is it?\n  Ready? Set…\n\n\nThe plan is simple\n\nI already have some definitive ideas about what I want to do:\n\n  All the programming will be done on Godot. I only have a little bit of experience using other engines, but since Godot is the “new” cool kid on the block, I decided on it.\n  Project ideas will come sequentially from the amazing list of #1GAM. I compiled the entire list of themes and keynotes since they aren’t available on the original site anymore.\n  On each project, I will focus on improving one or more parts of game development where I don’t feel as confident. This can be anything from planning, writing, coding, art, modelling, music, marketing, setting up a Steam page, etc. \nI only ever did programming since 2008, so the opportunities to learn the remaining stuff are endless.\n  Regarding deadlines, I intend to honor the #1GAM motto - one game a month.\n  Document everything! This is a learning experiment, both for you and me. Even a website/blog is something I never did in the past. We are already making progress! 😄\n  … and most important, ENJOY the journey!\n\n\nOr is it?\n\nI still don’t know what software I’ll use for practicing all the other stuff. I also don’t know how frequently I should write updates on my progress.\n\nI’ll gladly take suggestions from the audience.\n\nReady? Set…\nI guess we will have to see how it goes!\n",
      "categories": [],
      "tags": [],
      
      "collection": "posts",
      "url": "/blog/2022-03-02-the-plan-is-simple/"
    },{
      "image": {"path":"/assets/img/blog/posts/01-portcullis/part-1.jpg"},
      "title": "Making my first game - Portcullis (Part 1)",
      "date": "2022-04-01 00:00:00 +0100",
      
      "content": "\n  Greetings, fellow adventurer!\n  Theme - “Portcullis”    \n      Definition\n      Initial ideas\n    \n  \n  Game Concept - “Gatekeeper”\n\n\nGreetings, fellow adventurer!\n\nThe time has come for my first challenge.\nAs you already know, I will be doing one game a month as a way to learn everything I can about game development.\n\nStarting from now (April 2022), every month I will make a game from start-to-finish based on one of the original themes of #1GAM.\n\nWith that in mind, the theme for this month is… **drum roll**\n\nTheme - “Portcullis”\n\nBefore we proceed, I suggest you listen to the original keynote by @McFunkypants.\nHis words convey all the meaning that I want this blog to have.\nFor lots of current game developers, their journey started there and then. For me, it (re-)starts now.\n\nWith that in mind, let’s begin!\n\n\n  \n    Definition\n    Portcullis is the name given to a defensive sliding gate at the entrance of a castle. It is mounted on vertical grooves and can be raised and lowered very rapidly by a single guard. It can be used to prevent the passage of unwanted enemies, or even to trap them between two consecutive portcullises.\n  \n  \n    Initial ideas\n    The first game ideas that came to my mind were:\n    \n      “Gatekeeper” - You guard the main gate of your medieval city. You have to decide who enters and who can leave. Good choices might have good consequences. Bad choices will always prove to be bad.\n      “Open the gate!” - The King and Queen have returned from their long vacation, but it looks like they lost the keys to the Castle. You, as the Official Lockpicker of the Reign, shall open the gate for their Royal Highnesses. But don’t take too long, or you might lose your head.\n    \n\n    I decided to go with “Gatekeeper” as I was having some issues coming up with puzzles/mechanics for the other title.\n  \n\n\nGame Concept - “Gatekeeper”\nIn this game, you play the very important role of guarding the entrance to the city.\nAs a core mechanic, you will have the ability of lowering and raising the Portcullis.\n\nYou might allow your citizens to enter, while prohibiting undesired people from doing the same.\nWhen enemies come to attack, you will be able to use the spikes of the falling Portcullis to crush them and prevent their success.\n\nDo a good enough of a job and you will be able to upgrade your abilities in defending the Kingdom.\nDo a bad enough of a job and it will be your head on a spike instead!\n\n\n\nTime to finally get my hands dirty and play with Godot for the first time.\nI’ll be back next week, with an update on the development of this project. See you soon!\n\n",
      "categories": [],
      "tags": [],
      
      "collection": "posts",
      "url": "/blog/2022-04-01-making-my-first-game-portcullis-part-1/"
    },{
      "image": {"path":"/assets/img/blog/posts/01-portcullis/part-2.jpg"},
      "title": "Making my first game - Portcullis (Part 2)",
      "date": "2022-04-09 00:00:00 +0100",
      
      "content": "If you haven’t yet, please read Part 1.\n\n\n  Hello, again!\n  Tasks    \n      Gate placeholder\n      Mobs placeholder\n      Simple game loop\n    \n  \n  Until next week…    \n      Winning / Losing conditions\n      Game art\n    \n  \n\n\nHello, again!\n\nA week has already passed, so it is time for an official™ update on the development of Gatekeeper.\n\nI have been able to work a couple of hours each day on the project and I’m loving it! It has been pretty cool so far to learn Godot as it is pretty beginner-friendly on how to make things.\n\nThe first few days I dedicated to go through some tutorials to learn the basics of Godot.\n\nAfter I felt I knew the bare minimum to start programming this game, I jumped directly into it.\nThe first task was to create a placeholder for the most important element of the game… the Gate.\n\nTasks\n\nGate placeholder\nI started by mocking up an isometric shape, since I thought it would give more depth and character to the gate than a simple 2D side-view.\nI immediatelly put my hands on creating a raise and lower animations that felt somewhat convincing. This was pretty easy to do, thanks to the usage of Ease functions on Godot animations.\n\n\n\n\n\nAfterwards, I decided that the gate would have two collision areas:\n\n  a side one, which would behave like a wall to stop mobs;\n  a bottom one, which would behave like the area with spikes that will kill the enemies.\n\n\nIn the end, I ended up with the best gate I have ever made in my life. Behold!\n\n\n\nMobs placeholder\n\nHaving extensive experience developing Gate placeholders made creating the mobs placeholder very easy.\nMobs also have two collision areas:\n\n  one for stopping when they reach the closed gate;\n  another for detecting when they are being smashed by the gate.\n\n\n\n\nSimple game loop\n\nNow it was finally time to start gluing things together.\n\nI created a basic Spawner script to randomly spawn villagers or enemies.\nThese would walk automatically towards the Gate, and would either collide with it or pass through.\n\nCollisions use four separate Physics Layers to detect which part of the mob collided with which part of the gate.\nEach collision with the gate triggers a separate area_entered() signal, depending if it collided with the side or the bottom part.\nA new signal is then emited to the colliding mob, telling them to “stop” or “die”.\nIf the gate raises then they are no longer colliding, so a “move” signal is emited from the Gate to the mob.\n\nA corresponding Despawner script was also added to make sure the mobs can graciously be terminated once they leave the screen.\n\nYou can see it all in action below.\n\n\n\nVillagers are green,\nEnemySoliders are red,\ndon’t walk near a falling gate,\nor you will end up dead!\n\nUntil next week…\nThese are the tasks that I will attempt to work on for the following week:\n\nWinning / Losing conditions\nHaving already a basic game loop, my next task will be implementing the core losing/winning conditions for the game. My current concept is to award points whenever the player kills an enemy or lets a villager through, and deduct points otherwise.\n\nI also though about relating the spawning/movement rate of the mobs and movement speed of the gate with the overall success rate of the player. The better the player, the faster the game gets, the more points are available to earn.\n\nAfter a set amount of time, the game ends, and the player receives its final score.\n\nGame art\nNow, this is where my vulnerabilities start. Let me begin by assuring you that I was never good at drawing. I don’t even consider myself mediocre. I consciously avoided any kind of arts and crafts project since I was a kid.\n\nI already got some motivation by watching a great video of another fellow game developer. Make sure to follow him, because he works on really cool stuff.\n\n\n\n\n\n\n\nWith that in mind, I’ll give it my absolute best.\nI’ll see you again in about a week, with another development update.\n\n",
      "categories": [],
      "tags": [],
      
      "collection": "posts",
      "url": "/blog/2022-04-09-making-my-first-game-portcullis-part-2/"
    },{
      "image": {"path":"/assets/img/blog/posts/01-portcullis/part-3.jpg"},
      "title": "Making my first game - Portcullis (Part 3)",
      "date": "2022-04-19 00:00:00 +0100",
      
      "content": "If you haven’t yet, please read Part 1 and Part 2.\n\n\n  Hello, you fine folks!\n  Tasks    \n      Winning / Losing conditions\n      Game art\n    \n  \n  For next week…    \n      Difficulty Tweaking\n      Game Art        \n          Enemy / Villager\n          UI\n          Sound effects / Music\n        \n      \n    \n  \n\n\nHello, you fine folks!\n\nWelcome to the 2nd development update of Gatekeeper.\n\nIf you recall, on the last post I wrote that this week I was going to implement the Winning/Losing conditions and work on the Game Art.\n\nI was partial successful on both of them, so here’s what I have and haven’t done:\n\nTasks\n\nWinning / Losing conditions\nI used the concept of “points” that I presented last week and transformed it into a Morale meter.\n\nWhenever the player kills an enemy or helps a fleeing villager, its morale increases.\nIf, otherwise, a villager is killed or an enemy enters the village, then the player’s morale decreases.\n\nThis translates directly to the overall game speed. A higher morale makes the game faster more prone to error, but also more engaging.\nTo add m a little bit more to the difficulty, I also added a Health meter to the gate. If the gate is closed but someone is being blocked by it, then the mob (villager or enemy) will start to damage the gate. This behaviour is to make sure that the player doesn’t try to stall the game, because a destroyed gate immediately loses the game.\n\nThe player will have 90 seconds to finish the game with the highest morale possible:\n\n\n\nGame art\nThis was way more engaging than I previously antecipated. Although my lack of any type of arts and crafts skills, I think that I actually made some really good progress here.\n\nI’ve been using Aseprite so far, after watching a couple of basic tutorials. I had the cheatsheet opened on my 2nd monitor, alongside with several reference images that I used for inspiration.\n\nCurrently, I’ve drawn the gate, the curtain walls that are on both sides and the grass where the mobs walk on.\n\nI’ve enjoyed a lot the fast iteration between drawing and having the content immediately show on Godot.\n\nHere’s a video with the current standing of the art:\n\n\nFor next week…\n\nDifficulty Tweaking\nAlthough I already have a baseline difficulty scaling, I still didn’t fine-tune the different mechanic speeds as the morale increases. There are several things to consider: spawning rate, mob-type probability, movement speed and gate raising/lowering animations.\n\nThe main objective of this tweaking pass is to maximize engagement. The maximum morale should be possible to achieve on the last 15-30 seconds of the game, but should be hard to maintain. The game must also play smoothly and try not to be too repetitive (across several playthroughs).\n\nGame Art\nEnemy / Villager\n\nAs can be seen of the previous video, I still didn’t draw the art for the enemies and villagers. Since these will require some sort of animation and will be a little bit more detailed than the rest of the art, I decided to postpone these to be the last art to be done.\n\nUI\n\nI’m also missing some coherent UI to go along the pixel art. I plan to keep the “progress bar” meters for Morale and Gate Health, but I will need to play a little bit with their colors. I’ll also add a simple start an ending screens to tie everything together.\n\nSound effects / Music\n\nI also plan to create some simple sound effects for when the gate closes or when a mob is killed. If I have time, I’ll try to come up with a simple music loop for the game.\n\nOnly a few days remaining until the end of the month. See you soon, for the final update on this project!\n\n",
      "categories": [],
      "tags": [],
      
      "collection": "posts",
      "url": "/blog/2022-04-19-making-my-first-game-portcullis-part-3/"
    },{
      "image": {"path":"/assets/img/blog/posts/01-portcullis/part-4-finale.jpg"},
      "title": "Making my first game - Portcullis<br> (Part 4 - Finale)",
      "date": "2022-04-28 00:00:00 +0100",
      
      "content": "If you haven’t yet, please read Part 1, Part 2 and Part 3.\n\n\n  We did it, we finished Gatekeeper!\n  Tasks    \n      Difficulty Tweaking\n      Game Art        \n          Enemy / Villager\n          Gate / Walls\n          UI\n          Sound effects / Music\n        \n      \n      The Twist\n      That’s all Folks!\n    \n  \n\n\nWe did it, we finished Gatekeeper!\n\nThe first monthly project is now over.\n\nLet me start by saying that I’m very proud of the final result. Biased, I know… It’s not the most beautiful game in the World. It also isn’t the most fun… But it is mine!\n\nIf you remember, last week we already had some basic Winning/Losing conditions and started working on Game Art.\n\nFor this week’s update, this is what I worked on:\n\nTasks\n\nDifficulty Tweaking\nI played a little bit with everything I mentioned on the last post. The objective was to balance the game in order to make it as engaging as possible.\n\nThe gate animation speeds up the higher your Morale. I created 3 different raising animations so that the speed felt adequate to each one of these animations.\n\nThe mobs’ walking speed is randomized increasingly as the Morale goes up. At the start of the game their walking speed is constant, but it becomes more diverse in the late game.\n\nAs the Morale increases, the mobs’ spawning also gets faster and more unpredictable.\n\nWith optimal gameplay, the player should be able to reach maximum Morale after 50 seconds of playing and then they keep the last 40 seconds of gameplay trying to decide which are the best clusters of mobs to attack and which are the bests to let through.\n\nIf you take too much to decide, either the bad guys will enter or your Gate will be damage by the mob of people wanting to go inside. Be quick!\n\nGame Art\nEnemy / Villager\n\nFor the mobs, I wanted to make sure their own sprites had a walking animation. I ended up creating a very simple 4-frame animation. I actually spent very little time doing the mobs, since they are basically recolors of one-another.\n\nI made a first version of the mobs to test in-game and immediately got some feedback on how they seemed to be tilting backwards. Since walking is basically “continuously falling forward” I tweaked the art a little bit and it really made a difference.\n\n\n\nGate / Walls\n\nThis wasn’t original planned, but the same person that gave the feedback on the mobs’ sprites also told me that the remaining of the assets lacked some depth, since the Gate and the Walls looked like flat sheets of paper. I also thought it would be great if the spikes really penetrated the grass and made a hole. So, I added some depth to these textures and some dirt/holes where the spikes hit and now everything looks really cool!\n\nUpon seeing how cool these updated textures looked, I immediately noticed that now the gate lacked some “weight” to it. So I did what everyone would do as well: I added particle effects and screen shake everytime the Gate hits the ground, for that extra feel of impact.\n\n\n\nUI\n\nI ended up not doing anything on the Morale and Gate Health progress bars. Instead, I did the next best thing: I added damage sprites to the Gate, which gets more damaged as its Health decreases. This helps selling the idea that the bar above the Gate represents its health.\n\nI also added an extremely simple Start/Ending screen, with a single button to Play the game and a text-field to show if you were successful or not and your score.\n\n\n\nI would have loved to have prettier screens, with a Credits scene for example, but I had a very convincing reason not to do that. I explain it later.\n\nSound effects / Music\n\nSince this was also a completely new topic for me, I started with some research on what software were available and which ones I would like to work it.\nUpon some independent reading and some personal recommendations from GameDev people I follow, I ended up picking ChipTone for the sound-effects and Tracktion Waveform for the music.\n\nI created some cool sounds effects for when the Gate closes, whenever a mob successfully passes through and when the Gate is destroyed (causing the player to immediately lose the game).\n\nEvery time a mob walks across the Gate a sound is played. In case it’s an Enemy then the sound effect that is played goes down in pitch, representing a bad action by the player. Whenever a Villager crosses, the sounds that is played goes up in pitch, positively reinforcing this action. This happens at the same time that the Morale bar updates on the top of the screen, which makes it a more coherent experience for the player.\n\n\n\nI really enjoyed creating the sound effects with ChipTone. At a first glance one might think that you just need to press the Generator/Randomize buttons a couple of times and you’re done, but I actually spent more time fine-tuning each sound independently by playing with all the knobs and trying to understand how each one of the impacted the final result. Great piece of software!\n\nI also planned on doing a background music loop. Nothing too fancy, just something that helped filling the void.\nI ended up not doing it, so consequently I also didn’t have a chance of playing with Tracktion Waveform.\nBut as I said before, I have very convincing reason for it…\n\nThe Twist\n\nI caught Covid-19. I don’t know how. I don’t know why. It also doesn’t really matter.\nI’ve been feeling ill for almost a week now and I haven’t touched the game since. I’m not feeling terribly bad, but overall I’m lacking the concentration and enjoyment needed for working on the game.\n\nIt’s not an excuse. The game has, in my opinion, already surpassed any expectations that I had for a first project. But I still would have liked to work on it a little bit more. Instead, let’s take this extra motivation and use it for next month!\n\nThat’s all Folks!\n\nOne game, one month. One down, many more to go!\n\nAt the end of each month I will create a dedicated “Project” page to symbolize the launch of the game!\nThe project page for this one lives here: Gatekeeper. Give it a look and, preferably, a play!\n\nI’ll see you next month!\n\n",
      "categories": [],
      "tags": [],
      
      "collection": "posts",
      "url": "/blog/2022-04-28-making-my-first-game-portcullis-part-4-finale/"
    },{
      "image": {"path":"/assets/img/blog/posts/02-sound/part-1.jpg"},
      "title": "Making my second game - Sound (Part 1)",
      "date": "2022-05-01 00:00:00 +0100",
      
      "content": "\n  Second month, second challenge!\n  Theme - “Sound”    \n      Definition\n      Initial ideas\n    \n  \n  Game Concept - “Spectrum Attack”\n\n\nSecond month, second challenge!\n\nHello, everyone. Welcome to month #2!\n\nAs you already know, I’m doing one game a month as a way to learn everything I can about game development.\n\nEvery month I will make a game from start-to-finish based on one of the original themes of #1GAM.\nThe final result from the previous month is here: Gatekeeper.\n\nWith that in mind, the theme for this month is… **drum roll**\n\nTheme - “Sound”\n\nIf you are interested, please listen to the original keynote by @McFunkypants.\n\n\n  \n    Definition\n    Sound is a vibration that propagates through air/water/etc. as if it were a wave. Once it reaches our ear, it is then amplified and channelled into the cochlea. The cochlea is filled with fluid that moves in response to this vibration. 25,000 nerve endings attached to the cochlea then detect this movement and transform it into electrical signals that are sent to the brain. The brain will then turn these signals into a sound that we can locate, recognize and understand.\n  \n  \n    Initial ideas\n    I came with a number of ideas for this theme, but quickly discarded most of them as I wasn’t able to quickly figure out a way of turning each mechanic into a fun experience for the players. The ideas were:\n\n    \n      \n        “Goldberg’s Tune” - You need to create your own Goldberg Machine out of preset pieces. Your challenge is to replicate a series of famous tunes while creating amazing contraptions.\n      \n      \n        “Blind Sky” - You are a blind person experiencing an airplane flight baptism. Something goes wrong and your pilot is no longer able to fly the airplane. Your mission is to turn back and land safely, depending exclusively on your hearing and the instructions that are given from the Airport Control Tower.\n      \n      \n        “Spectrum Attack” - The player has to survive the duration of a specific song. Each beat/tone/speed change spawns a new enemy, which the player will be able to either dodge or destroy.\n      \n    \n\n    In the end I decided on “Spectrum Attack” as it is the concept that allows for more prototyping and ability to come up with something fun.\n  \n\n\nGame Concept - “Spectrum Attack”\n\nIn this game, the music is the most important aspect of gameplay. The characteristics of each song will determine when and where enemies spawn. Your objective is to survive the entire song, either by avoiding enemies or by destroying them.\n\nThe gameplay can be something like “Asteroids” where asteroids spawn “randomly” around you and you have to destroy them.\n\nAlternatively, it can be something like a top-down vertical bullet hell, where you have to actively avoid everything for the duration of the song.\n\nI’m not yet sure on what I want to work, so I’ll have to play a little bit with prototypes and see where it takes me!\n\n\nTime to go back to Godot and start exploring.\nI’ll be back next week, with an update on the development of this project. See you soon!\n\n",
      "categories": [],
      "tags": [],
      
      "collection": "posts",
      "url": "/blog/2022-05-01-making-my-second-game-sound-part-1/"
    },{
      "image": {"path":"/assets/img/blog/posts/02-sound/part-2-finale.jpg"},
      "title": "Making my second game - Sound<br> (Part 2 - Finale)",
      "date": "2022-05-28 00:00:00 +0100",
      
      "content": "If you haven’t yet, please read Part 1.\n\n\n  Spectrum Attack is done!    \n      The Twist (again)\n    \n  \n  The Game\n  Tasks    \n      Spectrum Analyzer\n      Falling Rain\n      Rolling Cat\n      UI\n      Art / Music\n      That’s it for May!\n    \n  \n\n\nSpectrum Attack is done!\n\nThe second monthly project is now over.\n\nThis was a rough month. So this will be the only update of the month for Spectrum Attack!\n\nThe Twist (again)\n\nIf you read the last devlog of April then you already know that I caught Covid-19. And it sucked… I thought it was going to be a walk in the park, because of vaccines and stuff. Oh boy, how wrong I was…\n\nI ended up having symptoms for a total of four weeks, which didn’t allow me to stay at the computer for more than a couple minutes of a time, since I would get very nauseous.\n\nSo basically, everything related to this game was done in the last couple of days.\n\nI thought about postponing this month’s project to June, but that meant to break my initial promise after only one month, so I pushed through it.\n\nOverall, I think it still payed off.\n\nThe Game\n\nI finished Part 1 being somewhat vague on what the game would be about.\nI stated that the game would feature its Music as the main gameplay element and I was able to keep that promise!\n\nSpectrum Attack! is a game about a cat that either loves or hates rain! Roll your way around while the music plays and either grab or avoid the rain drops.\n\n\n\nTasks\n\nSpectrum Analyzer\nI started by implement an analyzer that would give me a histrogram of the different sound frequencies that were being played. Fortunately, this was very easy since Godot provides a very easy-to-use API exactly for this.\n\nAfter having it working, I refactored it in order to give me the notes which were being played, no matter what octave it was. Basically, summing every 12nd interval in its own group.\n\nSince notes being played on top of the others create lots of frequency noise, I decided accumulate these samples and only query which notes were being played a handful times per second.\n\nFalling Rain\nQuerying the previous accumulated samples gives me numbers from 0 to 11 (A, A#, B, C, C#, D, D#, E, F, F#, G, G#).\n\nI divide the screen in 12 vertical strips and then spawn rain-drops in the corresponding slot for the notes that are being played at that exact time.\n\nRolling Cat\nNow, it’s just a matter of implementing a player entity for us to control!\n\nI decided on a cute cat that rolls around trying to avoid the rain.\nFor this, I just move it left and right and apply an adequate rotation speed.\n\nSince straight-falling rain was too easy, I make sure the rain falls always in the direction where the player is, for added difficulty.\n\nUI\nI came up with a very simple UI, since time was short.\n\nOn the main menu there are two buttons, for two different game modes: either collect the rain drops, or avoid them.\n\nI have a timer to tell how much until the round ends. I also keep track of the player score and show a “damage” indicator when the score is decreased.\n\n\n\nArt / Music\nNone of the art (background, cat, rain-drops) was done by me.\nMy contribution for this game is strictly the entire code on it.\n\nI really wanted to make my own assets, but I wasn’t on a physical or mental state necessary to do it.\n\nThat’s it for May!\n\nMay had its ups and downs, but I finished game number two!\n\nHere is the project page for Spectrum Attack! Give it a look and, preferably, a play!\n\nI’ll see you next month!\n\n",
      "categories": [],
      "tags": [],
      
      "collection": "posts",
      "url": "/blog/2022-05-28-making-my-second-game-sound-part-2-finale/"
    },{
      "image": {"path":"/assets/img/blog/posts/03-rogue/part-1.jpg"},
      "title": "Making my third game - Rogue (Part 1)",
      "date": "2022-06-01 00:00:00 +0100",
      
      "content": "\n  Third time is the charm!\n  Theme - “Rogue”    \n      Definition\n    \n  \n  Game Concept - “Infection”\n\n\nThird time is the charm!\n\nBe very welcome to month #3. The time has arrived for a new challenge.\n\nAs you already know, I’m doing one game a month as a way to learn everything I can about game development.\n\nEvery month I will make a game from start-to-finish based on one of the original themes of #1GAM.\nThe final result from the previous month is here: Spectrum Attack!\n\nAnd without further ado, June brings us… **drum roll**\n\nTheme - “Rogue”\n\nIf you are interested, you can listen to the original keynote by @McFunkypants.\n\n\n  \n    Definition\n    Rogue represents everything that is mischievous or deceitful. It can range from a person, to a plant or even to a computer-virus.\nIn the context of video-games it is used in reference to the term Roguelike, which represents a subgenre of games categorized by dungeon crawling, turn-based gameplay and inventory management.\n  \n\n\n\n\nStarting this month, I will try to conjugate working on the game with exercising. I came up with this idea after watching dev_spajus doing the same on his Twitch stream.\n\nI bought a treadmill and created a stand from some wood planks where I can put my laptop while I walk.\n\nIt is already proving to be succesful because after 45min I was able to figure out what I wanted to do for this month and in another 45min I wrote this entire blog post!\n\nGame Concept - “Infection”\n\nA super computer-virus was created to infect the highly-advanced infrastructures of all enemies of your great Nation. You must ensure its succesfulness and aid it in its mission before being detected and traced back to your country.\n\nThe game will consist of elements of evasion and battle. The player will be responsible with deciding what are the next actions to take. The player will battle some computer-systems of the infrastructure by using deckbuilder mechanics, where winning a battle grants you additional cards with the strenghts of the fallen foe.\n\nAlternatively, the player might choose to evade the battle in order to inspect other parts of the infrastructure which might help them on their mission.\n\nIn order to help being undetected, our virus makes use of a Random Number Generator to define how many action-points the player will have to battle or evade.\n\n\n\n\nI hope that this month I will have a lot more time to work on the game. Scope-wise, this will be a lot more complex than the previous game as I will need to create several cards, their unique art, balance their stats in order to make the game fun, etc.\n\n\nThe plan is now laid down. Time to go to business!\nI’ll be back next week, with an update on the development of this project. See you soon!\n\n",
      "categories": [],
      "tags": [],
      
      "collection": "posts",
      "url": "/blog/2022-06-01-making-my-third-game-rogue-part-1/"
    },{
      "image": {"path":"/assets/img/projects/1gam.png"},
      "title": "#1GAM",
      "date": "2018-12-01 00:00:00 +0000",
      
      "content": "\n  2013\n  2014\n  2015\n  2016\n  2017\n  2018\n\n\n#1GAM (One Game a Month), by the great @McFunkypants, is what motivated me to create this challenge for myself.\nIt allows you to iterate fast. You have the same deadline every time. And once a project is over you let it go and skip to the next one.\n\nI wanted to relive the original sentiment of #1GAM. That’s the reason why I will start every project of this challenge with one of its original monthly themes.\n\nI compiled all the themes and keynotes below, so they can be a reference for me and all of you.\n\n2013\n\n\n  \n    \n       \n      Month\n      Theme\n      Keynote\n       \n    \n    \n      #1\n      January\n      PORTCULLIS\n       \n      \n    \n    \n      #2\n      February\n      SOUND\n       \n      \n    \n    \n      #3\n      March\n      ROGUE\n       \n      \n    \n    \n      #4\n      April\n      SPRING\n       \n      \n    \n    \n      #5\n      May\n      GROW\n       \n      \n    \n    \n      #6\n      June\n      EDUCATIONAL\n       \n      \n    \n    \n      #7\n      July\n      METAL\n       \n      \n    \n    \n      #8\n      August\n      PHILOSOPHY\n       \n      \n    \n    \n      #9\n      September\n      HEXAGONS\n      Text\n      \n    \n    \n      #10\n      October\n      CANDY\n      Text\n      \n    \n    \n      #11\n      November\n      CHANGE\n      Text\n      \n    \n    \n      #12\n      December\n      FROZEN SECRET KITTEN\n      Text\n      \n    \n  \n\n\n2014\n\n\n  \n    \n       \n      Month\n      Theme\n      Keynote\n       \n    \n    \n      #13\n      January\n      RESPAWN\n      Text\n      \n    \n    \n      #14\n      February\n      LOOPS\n      Text\n      \n    \n    \n      #15\n      March\n      NEON\n      Text\n      \n    \n    \n      #16\n      April\n      WATER\n      Text\n      \n    \n    \n      #17\n      May\n      MONEY\n      Text\n      \n    \n    \n      #18\n      June\n      DOCTOR\n      Text\n      \n    \n    \n      #19\n      July\n      FLAGS\n      Text\n      \n    \n    \n      #20\n      August\n      FIRE\n      Text\n      \n    \n    \n      #21\n      September\n      THE FAIR\n      Text\n      \n    \n    \n      #22\n      October\n      DEATH\n      Text\n      \n    \n    \n      #23\n      November\n      LUCK\n      Text\n      \n    \n    \n      #24\n      December\n      SNOW DAY\n      Text\n      \n    \n  \n\n\n2015\n\n\n  \n    \n       \n      Month\n      Theme\n      Keynote\n       \n    \n    \n      #25\n      January\n      RESOLUTION\n      Text\n      \n    \n    \n      #26\n      February\n      MAPS\n      Text\n      \n    \n    \n      #27\n      March\n      TRANSFORM\n      Text\n      \n    \n    \n      #28\n      April\n      TEAMWORK\n      Text\n      \n    \n    \n      #29\n      May\n      CHILDHOOD\n      Text\n      \n    \n    \n      #30\n      June\n      CLOUDS\n      Text\n      \n    \n    \n      #31\n      July\n      SOLAR\n      Text\n      \n    \n    \n      #32\n      August\n      SPLASH\n      Text\n      \n    \n    \n      #33\n      September\n      30 SEC\n      Text\n      \n    \n    \n      #34\n      October\n      FINISH LINE\n      Text\n      \n    \n    \n      #35\n      November\n      PROSE\n      Text\n      \n    \n    \n      #36\n      December\n      QUESTGIVER\n      Text\n      \n    \n  \n\n\n2016\n\n\n  \n    \n       \n      Month\n      Theme\n      Keynote\n       \n    \n    \n      #37\n      January\n      HOBBY\n      Text\n      \n    \n    \n      #38\n      February\n      HOME\n      Text\n      \n    \n    \n      #39\n      March\n      ARENA\n      Text\n      \n    \n    \n      #40\n      April\n      AGE\n      Text\n      \n    \n    \n      #41\n      May\n      RAISON D’ÊTRE\n       \n      \n    \n    \n      #42\n      June\n      COUCH\n      Text\n      \n    \n    \n      #43\n      July\n      FAR AND WIDE\n      Text\n      \n    \n    \n      #44\n      August\n      LEVELUP\n      Text\n      \n    \n    \n      #45\n      September\n      PERFECTION\n      Text\n      \n    \n    \n      #46\n      October\n      INK\n      Text\n      \n    \n    \n      #47\n      November\n      TABULA RASA\n      Text\n      \n    \n    \n      #48\n      December\n      WHY\n      Text\n      \n    \n  \n\n\n2017\n\n\n  \n    \n       \n      Month\n      Theme\n      Keynote\n       \n    \n    \n      #49\n      January\n      FRIENDS\n      Text\n      \n    \n    \n      #50\n      February\n      ANTHEM\n      Text\n      \n    \n    \n      #51\n      March\n      WRITE\n      Text\n      \n    \n    \n      #52\n      April\n      —\n       \n      There was no theme announced.\n    \n    \n      #53\n      May\n      —\n       \n      There was no theme announced.\n    \n    \n      #54\n      June\n      CGA GRAPHICS\n      Text\n       \n    \n    \n      #55\n      July\n      PERFECTION\n      Text\n       \n    \n    \n      #56\n      August\n      ANTHROPOMORPHISM\n      Text\n       \n    \n    \n      #57\n      September\n      FREEDOM\n      Text\n       \n    \n    \n      #58\n      October\n      DARKNESS\n      Text\n       \n    \n    \n      #59\n      November\n      HARVEST\n      Text\n       \n    \n    \n      #60\n      December\n      JAM\n      Text\n      \n    \n  \n\n\n2018\n\n\n  \n    \n       \n      Month\n      Theme\n      Keynote\n    \n    \n      #61\n      January\n      REBIRTH\n       \n    \n    \n      #62\n      February\n      MUSIC\n      Text\n    \n    \n      #63\n      March\n      PERMANENCE\n      Text\n    \n    \n      #64\n      April\n      QUALITY\n      Text\n    \n    \n      #65\n      May\n      DEATH\n      Text\n    \n    \n      #66\n      June\n      CREATURE FEATURE\n      Text\n    \n    \n      #67\n      July\n      VACATION\n      Text\n    \n    \n      #68\n      August\n      HEAT\n      Text\n    \n    \n      #69\n      September\n      TEACH\n      Text\n    \n    \n      #70\n      October\n      FORGIVE\n      Text\n    \n    \n      #71\n      November\n      THANKS\n      Text\n    \n    \n      #72\n      December\n      GOODBYE\n      Text\n    \n  \n\n\n",
      "categories": [],
      "tags": [],
      
      "collection": "projects",
      "url": "/projects/1GAM"
    },{
      "image": {"path":"/assets/img/projects/01-gatekeeper/thumbnail.png"},
      "title": "Gatekeeper",
      "date": "2022-04-01 00:00:00 +0100",
      
      "content": "\n  Devlogs\n  Play it here!\n\n\nThis is the first game of my Game Developer adventure. You can read more about its development on the devlogs linked below.\n\nThe game is available to play on itch.io. All the source code and assets can be downloaded from GitHub.\n\nDevlogs\nPart 1 - Theme “Portcullis” and initial concept\n\nPart 2 - First placeholders and game loop\n\nPart 3 - Game Art and Winning/Losing conditions\n\nPart 4 - Tweaks, Sound effects, Menu and Done!\n\nPlay it here!\n\nGatekeeper by dudezord\n\n",
      "categories": [],
      "tags": [],
      
      "collection": "projects",
      "url": "/projects/Gatekeeper"
    },{
      "image": {"path":"/assets/img/projects/02-spectrum-attack/thumbnail.png"},
      "title": "Spectrum Attack!",
      "date": "2022-05-01 00:00:00 +0100",
      
      "content": "\n  Devlogs\n  Play it here!\n\n\nThis is the second game of my Game Developer adventure. You can read more about its development on the devlogs linked below.\n\nThe game is available to play on itch.io. All the source code and assets can be downloaded from GitHub.\n\nDevlogs\nPart 1 - Theme “Sound” and initial concept\n\nPart 2 - Real concept, game loop and features\n\nPlay it here!\n\nSpectrum Attack! by dudezord\n\n",
      "categories": [],
      "tags": [],
      
      "collection": "projects",
      "url": "/projects/Spectrum-Attack"
    }
  ]
}

